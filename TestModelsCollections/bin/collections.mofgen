import "platform:/resource/GlossarDocumentation/model/glossarDocumentation.ecore" as testImport 

config(){
	home="C:/test/" 
} 

gen listTest(){
	List l1 = ["DocUno", "DocDeux", "DocTrois"]
	var container = createContainer()
	
	for name in l1 {
		addDocToContainer(container, name)  
	}
	
	return container
}

gen mapTestEntries(){
	// TODO unique names!
//	Map m1 = [("one", "DocUno"), ("one", "DocDeux"), ("one", "DocTrois")] //TODO validation for same key names in map declaration
	Map m1 = [("one", "DocUno"), ("two", "DocDeux"), ("three", "DocTrois")] 
		var container = createContainer()
	
	for m1-entries->name {
		addDocToContainer(container, name)        
	}
	
	return container
}

gen mapTestKeys(){
	// TODO unique names!
//	Map m1 = [("one", "DocUno"), ("one", "DocDeux"), ("one", "DocTrois")] //TODO validation for same key names in map declaration
	Map m1 = [("one", "DocUno"), ("two", "DocDeux"), ("three", "DocTrois")] 
		var container = createContainer()
	
	for m1-keys->name {
		addDocToContainer(container, name)          
	}
	
	return container
}

pattern createContainer(){
	DocumentationContainer container
} return this.container

pattern addDocToContainer(DocumentationContainer container, String docName){
	container {
		documents -> doc
	}
	Document doc {
		name = docName
	}
}