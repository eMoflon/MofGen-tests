import "platform:/resource/GlossarDocumentation/model/glossarDocumentation.ecore" as testImport 

config(){
	home="C:/test/" 
} 

gen testForLoop(){     
	var container = containerCreation()
	var docName = "IchBinDoc" 
	
	for i in 0:9 {   
		addDocToContainer(container, docName + i)
	}          
	   
	return container    
}  

gen testPattern1(){
	var container = containerCreation()
	var docName = "IchBinDoc"  
	  
	for i in 0:10 {
		addDocToContainerWithEntries(container, docName, i)
	}
	  
	return container   
}
 
gen testOrdering(){
	var container = containerCreation()
	ordering(container)
	return container
} 

gen testSettingEnum(){
	var entry = entryWithEnum()
	return entry
}
 
gen testPatternCallReturn(){
	return containerCreation()
}

// TODO:
gen testPatternWithinPattern(){
	var container = containerCreation()
	
	
	
	return container
}

pattern containerWithDocuments(int docNumber){
	DocumentationContainer container {
		for i in 1:docNumber {
			documents -> createDocument("doc"+docNumber)
		}
	}
}

pattern createDocument(String name){
	Document doc {
		name = name
	}
} return this.doc

pattern entryWithEnum(){
	Entry e {
		type = testImport.EntryType.METHOD
	}
} return this.e

pattern ordering(DocumentationContainer container){
	container{
		documents -> doc
	}
	Document doc{
		name = e.name   
		entries -> e
	}
	Entry e { 
		name = "WennIchEinDocBinWÃ¤reichLieberEinEntry"   
		type = testImport.EntryType.METHOD
	}
}
 
pattern addDocToContainer(DocumentationContainer container, String name){ 
	container {
		documents->doc       
	} 
	Document doc{ 
		name = name
	} 
} return this.doc 
 
pattern addDocToContainerWithEntries(DocumentationContainer container, String docName, int i){ 
	container { 
		documents->doc      
	} 
	Document doc = createDocWithEntries(docName, i, "ChildOf_" + docName)  
} return this.doc

pattern createDocWithEntries(String docName, int entryNumber, String entryName){ 
	Document doc {
		name = docName
		for i in 0 : entryNumber{     
			entries->createEntry(entryName, entryNumber)               
		}
	}
} return this.doc 

pattern createEntry(String entryName, int number){
	Entry entry {
		name = entryName + number   
	}
} return this.entry

pattern containerCreation() {
	DocumentationContainer container
} return this.container